package main

import (
	"flag"
	"fmt"
	"github.com/hexiaoyun128/gin-base-framework/common"
	"github.com/hexiaoyun128/gin-base-framework/crons"
	_ "github.com/hexiaoyun128/gin-base-framework/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/hexiaoyun128/gin-base-framework/router"
	"github.com/hexiaoyun128/gin-base-framework/system"
	log "github.com/cihub/seelog"
	"github.com/gin-gonic/gin"
	"os"
	"path"
)

// @title  Dongjing Server api
// @version 2.0
// @description Dongjing server
// @termsOfService https://github.com/hexiaoyun128

func main() {

	var err error
	fPath, _ := os.Getwd()
	fPath = path.Join(fPath, "conf")
	configPath := flag.String("c", fPath, "config file path")
	flag.Parse()
	err = system.LoadConfigInformation(*configPath)
	if err != nil {
		return
	}
	go crons.Run()


	if common.ServerInfo.Mode == "debug" {
		gin.SetMode(gin.DebugMode)

	} else if common.ServerInfo.Mode == "release" {
		gin.SetMode(gin.ReleaseMode)
	}

	//router init
	router := router.InitRouter()
	server := common.ServerInfo
	serverInfo := common.StringsJoin(server.Host, ":", server.Port)
	// restart
	if server.EnableHttps {
		fmt.Println("server start https")
		err := router.RunTLS(serverInfo, server.CertFile, server.KeyFile)
		fmt.Println(err)
		if err != nil {
			log.Errorf("server start failed :%s", err.Error())
		}
	} else {
		fmt.Printf("server start info: %s\n", serverInfo)
		log.Infof("server start info: %s", serverInfo)
		err := router.Run(serverInfo)
		fmt.Println(err)
		if err != nil {
			log.Errorf("server start failed :%s", err.Error())
		}
	}
}
